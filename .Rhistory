library(data.table)
mydat2007 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2007.txt.gz&dir=data/historical/stdmet/')
install.packages('curl')
library(curl)
mydat2007 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2007.txt.gz&dir=data/historical/stdmet/')
mydat2008 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2008.txt.gz&dir=data/historical/stdmet/')
mydat2009 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2009.txt.gz&dir=data/historical/stdmet/')
mydat2010 <- fread('https://www.ndbc.noaa.gov/download_data.php?filename=nlnc3h2010.txt.gz&dir=data/historical/stdmet/')
mydat2011 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2011.txt.gz&dir=data/historical/stdmet/')
mydat2012 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2012.txt.gz&dir=data/historical/stdmet/')
mydat2013 <- fread('http://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2013.txt.gz&dir=data/historical/stdmet/')
mydat2007 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2007.txt.gz&dir=data/historical/stdmet/')
mydat2014 <- fread('http://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2014.txt.gz&dir=data/historical/stdmet/')
mydat2010 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2010.txt.gz&dir=data/historical/stdmet/')
mydat2015 <- fread('http://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2015.txt.gz&dir=data/historical/stdmet/')
mydat2016 <- fread('http://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2016.txt.gz&dir=data/historical/stdmet/')
mydat2016 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2016.txt.gz&dir=data/historical/stdmet/')
mydat2017Jun <- fread('http://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc362017.txt.gz&dir=data/stdmet/Jun/')
mydat2017 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2017.txt.gz&dir=data/historical/stdmet/')
mydat2007 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2007.txt.gz&dir=data/historical/stdmet/')
mydat2010 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2010.txt.gz&dir=data/historical/stdmet/')
mydat2010 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2010.txt.gz&dir=data/historical/stdmet/')
mydat2010 <- fread('https://www.ndbc.noaa.gov/view_text_file.php?filename=nlnc3h2010.txt.gz&dir=data/historical/stdmet/')
mergeDat <- rbind(mydat2007,mydat2008,mydat2009,mydat2010,mydat2011,mydat2012,mydat2013,mydat2014,mydat2015, mydat2016, mydat2017)
mergeDat
submergeDat <- subset(mergeDat, MM=="06"|MM=="07"|MM=="08"|MM=="09")
submergeDat
colnames(submergeDat)[1] <- "YY"
submergeDat
subsubmergeDat <- subset(submergeDat, select = c(YY,MM,DD,WTMP))
subsubmergeDat
finDat<- subsubmergeDat[!(subsubmergeDat$WTMP >900),]
finDat
finDat$WTMP
mean(as.numeric(finDat$WTMP))
plot(finDat$MM, finDat$WTMP)
plot(finDat$MM, finDat$WTMP)
sum(which(finDat$WTMP>=30))
sum(finDat$WTMP>=30)
which(finDat$WTMP>=30)
which(finDat$WTMP>=32)
which(finDat$WTMP>=35)
which(finDat$WTMP>=40)
which(finDat$WTMP>=90)
which(finDat$WTMP>=60)
print(c(finDat$WTMP[101925],finDat$WTMP[101939]))
finDat$WTMP[101925]
which(finDat$WTMP>=60)
finDat[101925]
installed.packages('prettydoc')
library(prettydoc)
library('prettydoc')
install.packages('prettydoc')
install.packages("prettydoc")
install.packages('prettydoc')
install.packages('rmarkdown')
install.packages('knitr')
setwd("~/Documents/GitHub/Ecological-Genomics")
install.packages('wesanderson')
install.packages('vsn')
BiocManager::install("vsn") AND BiocManager::install("hexbin")
BiocManager::install("vsn")
BiocManager::install("hexbin")
library(DESeq2)
library(vsn)  ### First: BiocManager::install("vsn") AND BiocManager::install("hexbin")
library(DESeq2)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)
library(ggpubr)
library(wesanderson)
countsTable <- read.table("RS_cds2kb_countsMatrix.txt", header=TRUE, row.names=1)
head(countsTable)
dim(countsTable) #66,408 transcripts mapped and 76 samples... way to check that we are working with the right table
countsTableRound <- round(countsTable) # Need to round because DESeq wants only integers
head(countsTableRound)
countsTable <- read.table("RS_cds2kb_countsMatrix.txt", header=TRUE, row.names=1)
head(countsTable)
dim(countsTable) #66,408 transcripts mapped and 76 samples... way to check that we are working with the right table
countsTableRound <- round(countsTable) # Need to round because DESeq wants only integers
head(countsTableRound)
## Import the samples description table - links each sample to factors of the experimental design.
# Need the colClasses otherwise imports "day" as numeric which DESeq doesn't like, coula altneratively change to d0, d5, d10
conds <- read.delim("RS_samples.txt", header=TRUE, stringsAsFactors = TRUE, row.names=1, colClasses=c('factor', 'factor', 'factor', 'factor'))
head(conds)
dim(conds)
## Let's see how many reads we have from each sample:
colSums(countsTableRound)
mean(colSums(countsTableRound))
barplot(colSums(countsTableRound), las=3, cex.names=0.5,names.arg = substring(colnames(countsTableRound),1,13))
abline(h=mean(colSums(countsTableRound)), col="blue", lwd =2)
rowSums(countsTableRound)
mean(rowSums(countsTableRound)) #3000
median(rowSums(countsTableRound)) #24
apply(countsTableRound,2,mean)
dds <- DESeqDataSetFromMatrix(countData = countsTableRound, colData = conds, design = ~pop + day + treatment)
dim(dds)
dds <- dds[rowSums(counts(dds)) > 76]
dim(dds)
dds <- dds[rowSums(counts(dds)) > 760]
dim(dds)
dds <- dds[rowSums(counts(dds)) > 76]
dim(dds)
dds <- DESeq(dds)
resultsNames(dds)
dds <- DESeqDataSetFromMatrix(countData = countsTableRound, colData = conds, design = ~climate + day + treatment)
dim(dds)
dds <- dds[rowSums(counts(dds)) > 76]
dim(dds)
dds <- DESeq(dds)
resultsNames(dds)
res <- results(dds,alpha = 0.05)
res <- res[order(res$padj),]
head(res)
summary(res)
res_treatCD <- results(dds, name = 'treatment_D_vsC',alpha = 0.05)
res_treatCD <- results(dds, name = 'treatment_D_vs_C',alpha = 0.05)
res_treatCD  <- res_treatCD [order(res_treatCD $padj),]
head(res_treatCD )
summary(res_treatCD )
plotMA(res_treatCD,ylim=c(-3,3))
vsd <- vst(dds,blind=FALSE)
data <- plotPCA(vsd,intgroup=c('climate','treatment','day'),returnData=TRUE)
percentVar <- round(100*attr(data,'percentVar'))
data$treatment <- factor(data$treatment, levels=c("C","H","D"), labels = c("C","H","D"))
data$day <- factor(data$day, levels=c("0","5","10"), labels = c("0","5","10"))
ggplot(data, aes(PC1, PC2, color=climate, shape=treatment)) +
geom_point(size=4, alpha=0.85) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
theme_minimal()
d <-plotCounts(dds, gene="MA_10426407g0030", intgroup = (c("treatment","climate")), returnData=TRUE)
d
p <-ggplot(d, aes(x=climate, y=count, shape=climate, colour = treatment)) +
theme_minimal() + theme(text = element_text(size=20), panel.grid.major=element_line(colour="grey"))
p <- p + geom_point(position=position_jitter(w=0.3,h=0), size=3) +
scale_x_discrete(limits=c("CW","HD"))
p
p <-ggplot(d, aes(x=treatment, y=count, shape=climate)) +
theme_minimal() + theme(text = element_text(size=20), panel.grid.major=element_line(colour="grey"))
p
library(pheatmap)
install.packages('pheatmap')
library(pheatmap)
topgenes <- head(rownames(res_treatCD),20)
mat <- assay(vsd)[topgenes,]
mat <- mat - rowMeans(mat)
df <- as.data.frame(colData(dds)[,c("treatment","climate")])
pheatmap(mat, annotation_col=df)
